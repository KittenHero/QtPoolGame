@startuml

together {
    class Dialog {
        -m_game : PoolGame
        -m_framerateTimer : QTimer
        -m_timestepTimer : QTimer
        --
        +start() : void
        #paintEvent(QPaintEvent) : void
        #event(QEvent) : bool
        --slots--
        +runSimulationStep() : void
    }
    
    abstract PoolGame <<abstract>> {
        #m_table : Table
        #m_ball : vector<Ball>
        #m_cueball : Ball
        +{abstract} simulateTimeStep(float) : void
        +{abstract} draw(QPainter) : void
        +{abstract} handleEvent(QEvent) : void
        #collisionVector(Ball, Ball) : QVector2D
        #collisionVector(Table, Ball) : QVector2D
    }
    
    abstract class Ball <<abstract>> {
        #m_position : QVector2D 
        #m_velocity : QVector2D 
        #m_radius : float
        #m_mass : float
        #m_colour : QColor
        
        +{abstract} changePosition(QVector2D deltaP) : void
        +{abstract} changeVelocity(QVector2D deltaX) : void
        +{abstract} daw(QPainter) : void
        +{abstract} move(float dtime) : void
        +various getters() and setters()
    }
    
    abstract class Table <<abstract>> {
        #m_width : float
        #m_height : float
        #m_friction : float
        
        +{abstract} daw(QPainter) : void
        +various getters()
    }
    
    class BasePool {
        +simulateTimeStep(float) : void
        +draw(QPainter) : void
        +size() : QSize
        -resolveBallCollision(Ball, Ball, collisionVector) : void
        -resolveTableCollision(Ball, collisionVector) : void
    }
    
	class StageOneBall {
		+draw(QPainter) : void
	}
    
    class StageOneTable {
        -m_colour : QColor
        +draw(QPainter) : void
    }
    
    
    class Initializer {
        +PoolGame createPoolgame(string path)
    }
    
    class GameBuilder {
        -m_table : Table
        -m_ball : vector<Ball>
        -m_factory : AbstractFactory
        
        +addBall(QJsonObject spec) : void
        +buildTable(QJsonObject spec) : void
        +getGame() : PoolGame
    }
    
    interface AbstractFactory <<interface>> {
        +{abstract} Ball makeBall(QJsonObject spec) :
        +{abstract} Table makeTable(QJsonObject spec) :
    }
    
    class StageOneFactory {
        +makeBall(QJsonObject spec) : Ball
        +makeTable(QJsonObject spec) : Table
    }
}
    
together {
    
    abstract GameFeature <<abstract>> {
        -m_game : PoolGame
        +draw(QPainter) : void
        +simulateTimeStep(float) : void
        +handleEvent(QEvent) : void
    }
    
    class CueBallControlFeature {
		-m_click : bool
		-m_force : QVector2D
        +handleEvent(QEvent) : void
        +simulateTimeStep(float) : void
        +draw(QPainter) : void
    }
    
    class ExplodingBallFeature {
        +handleEvent(QEvent) : void
        +simulateTimeStep(float) : void
        +draw(QPainter) : void
    }
    
    class PocketInteractionFeature {
		-m_table : PocketedTable
		-m_cuesunk : bool
		-m_cue_radius : double
        +handleEvent(QEvent) : void
        +simulateTimeStep(float) : void
        +draw(QPainter) : void
    }
    
    class MatryoshkaBall {
        -m_strength : double
        -m_nested : vector<Ball>
        -{static} m_showNested : bool
        
        +draw(QPainter) : void
        +setColor(QColor) : void
        +nestedBalls() : vector<Ball>&
        +{static} toggleInnerVisibility() : void
    }
    
    class PocketedTable {
        -m_pockets : vector<Pair<QVector2D, float>>
        -m_color : QColor
        
        +draw(QPainter) : void
        +addPocket(QVector2D centre, float radius) : void
        +clearPockets() : void
    }
    class StageTwoFactory {
        + makeBall(QJsonObject spec) : Ball
        + makeTAble(QJsonObject spec) : Table
    }
}

Initializer                 --->    GameBuilder

Dialog                      *---    PoolGame
PoolGame                    *---    Ball
PoolGame                    *---    Table

PoolGame                    <|-r    BasePool
PoolGame                    <|--    GameFeature
PoolGame                    -r-*    GameFeature

GameFeature                 <|-l    CueBallControlFeature
GameFeature                 <|--    PocketInteractionFeature
GameFeature                 <|--    ExplodingBallFeature

Ball                        <|..    StageOneBall
Ball                        <|..    MatryoshkaBall
Ball                        ---*    MatryoshkaBall
Table                       <|..    StageOneTable
Table                       <|..    PocketedTable

ExplodingBallFeature        --->    MatryoshkaBall
PocketInteractionFeature    --->    PocketedTable

GameBuilder                 *---    AbstractFactory
GameBuilder                 ...>    PoolGame

StageOneFactory             ..|>    AbstractFactory
StageTwoFactory             ..|>    AbstractFactory

StageOneBall                <...    StageOneFactory
StageOneTable               <...    StageOneFactory

PocketedTable               <...    StageTwoFactory
MatryoshkaBall              <...    StageTwoFactory

class Key #ffee77 {
	+public
	#protected
	-private
	+publiic method()
	#protected method()
	-private method()
	{abstract} virtual method()
	{static} static
}

Key -[hidden]- GameFeature

skinparam Class {
	BackgroundColor<<abstract>> PaleGreen
	BackgroundColor<<interface>> PowderBlue
}

hide circle
hide empty members

@enduml

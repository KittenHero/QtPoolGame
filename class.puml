@startuml

package stageone {
    class Initializer {
        +PoolGame createPoolgame(string path)
    }
    
    class GameBuilder {
        -m_table : Table
        -m_ball : vector<Ball>
        -m_factory : AbstractFactory
        
        +addBall(QJsonObject spec) : void
        +buildTable(QJsonObject spec) : void
        +getGame() : PoolGame
    }
    
    interface AbstractFactory <<interface>> {
        +{abstract} Ball makeBall(QJsonObject spec) :
        +{abstract} Table makeTable(QJsonObject spec) :
    }
    
    class StageOneFactory {
        +makeBall(QJsonObject spec) : Ball
        +makeTable(QJsonObject spec) : Table
    }
    
    class Dialog {
        -m_game : PoolGame
        -m_framerateTimer : QTimer
        -m_timestepTimer : QTimer
        --
        +start() : void
        #paintEvent(QPaintEvent) : void
        #event(QEvent) : bool
        --slots--
        +runSimulationStep() : void
        
    }
    
    abstract PoolGame <<abstract>> {
        #m_table : Table
        #m_ball : vector<Ball>
        #m_cueball : Ball *alias
        +{abstract} simulateTimeStep(float) : void
        +{abstract} draw(QPainter) : void
        +{abstract} handleEvent(QEvent) : void
    }
    
    class BasePool {
        +simulateTimeStep(float) : void
        +draw(QPainter) : void
        +size() : QSize
        -collision(Ball, Ball) : void
        -collision(Table, Ball) : void
    }
    
    abstract class Ball <<abstract>> {
        #m_position : QVector2D 
        #m_velocity : QVector2D 
        #m_radius : float
        #m_mass : float
        
        +{abstract} changePosition(QVector2D deltaP) : void
        +{abstract} changeVelocity(QVector2D deltaX) : void
        +{abstract} daw(QPainter) : void
        +{abstract} move(float dtime) : void
        +various getters() and setters()
    }
    
    abstract class Table <<abstract>> {
        #m_width : float
        #m_height : float
        #m_friction : float
        
        +{abstract} daw(QPainter) : void
        +various getters()
    }
    
    class StageOneBall {
        -m_colour : QColor
        +setColor(QColor) : void
        +colour() : const QColor&
    }
    
    
    class StageOneTable {
        -m_colour : QColor
        +draw(QPainter) : void
    }
    
}

package stagetwo {

    class StageTwoFactory {
        + makeBall(QJsonObject spec) : Ball
        + makeTAble(QJsonObject spec) : Table
    }

    abstract GameFeature <<abstract>> {
        -m_game : PoolGame
        +draw(QPainter) : void
        +simulateTimeStep(float) : void
        +handleEvent(QEvent) : void
    }
    
    class CueBallControlFeature {
        -m_clickCoord : Pair<QVector2D, QVector2D> 
        +handleEvent(QEvent) : void
        +simulateTimeStep(float) : void
        +draw(QPainter) : void
    }
    
    class ExplodingBallFeature {
        +handleEvent(QEvent) : void
        +simulateTimeStep(float) : void
        +draw(QPainter) : void
    }
    
    class PocketInteractionFeature {
        +handleEvent(QEvent) : void
        +simulateTimeStep(float) : void
        +draw(QPainter) : void
    }
    
    class MatryoshkaBall {
        -m_colour : QColor
        -m_nested : vector<Ball>
        -{static} m_showNested : boolean
        
        +draw(QPainter) : void
        +setColor(QColor) : void
        +{static} toggleInnerVisibility() : void
    }
    
    class PocketedTable {
        -m_pockets : vector<Pair<QVector2D, float>>
        -m_color : QColor
        
        +draw(QPainter) : void
        +addPocket(QVector2D centre, float radius) : void
        +clearPockets() : void
    }
}
Initializer                 --->    GameBuilder

Dialog                      *---    PoolGame
PoolGame                    *---    Table
PoolGame                    *---    Ball

PoolGame                    <|--    GameFeature
PoolGame                    <|--    BasePool

GameFeature                 *---    PoolGame
GameFeature                 <|--    CueBallControlFeature
GameFeature                 <|--    PocketInteractionFeature
GameFeature                 <|--    ExplodingBallFeature

Table                       <|..    StageOneTable
Table                       <|..    PocketedTable
Ball                        <|..    StageOneBall
Ball                        <|..    MatryoshkaBall
MatryoshkaBall              ---*    Ball

ExplodingBallFeature        --->    MatryoshkaBall
PocketInteractionFeature    --->    PocketedTable

AbstractFactory             ---*    GameBuilder
PoolGame                    <...    GameBuilder

StageOneFactory             ..|>    AbstractFactory
StageTwoFactory             ..|>    AbstractFactory

StageOneBall                <...    StageOneFactory
StageOneTable               <...    StageOneFactory

PocketedTable               <...    StageTwoFactory
MatryoshkaBall              <...    StageTwoFactory


class Key #ffee77 {
	+public
	#protected
	-private
	+publiic method()
	#protected method()
	-private method()
	{abstract} virtual method()
	{static} static
}

skinparam Class {
	BackgroundColor<<abstract>> PaleGreen
	BackgroundColor<<interface>> PowderBlue
}

hide circle
hide empty members

@enduml
